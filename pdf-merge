#!/usr/bin/env bash

function show_help() {
    echo "Usage:   $(basename $0) [options]"
    echo "Options: -h, --help                 show help"
    echo "         -v, --version              show version"
    echo "         -b, --binary <gs|pdftk>    gs by default"
    echo "         -o, --output <file>        merge.pdf if not specified"
    echo "         -i, --input  <file>        necessary if option is not -h or -v"
}

function show_version() {
    echo "$(basename $0) v20210901, depending on ghostscript or pdftk"
}

command='gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -sOutputFile=' && in_list='' && n=1
in=-1 && out=-1 && in_end=0 && out_end=0

while [ $n -le $# ]; do
    eval var=\${$n}
    case $(echo "$var" | sed -e 's/\(.*\.\)//' | tr 'A-Z' 'a-z') in
    '-h' | '--help') show_help && exit 1 ;;
    '-v' | '--version') show_version && exit 1 ;;
    '-i')
        if [ $in = -1 ]; then
            in=0
            if [ $out -ge 0 ]; then
                out_end=1 # if output has already started, close it
            fi
        else
            echo "Error: option -i is duplicated!" && show_help && exit 1
        fi
        ;;
    '-o')
        if [ $out = -1 ]; then
            out=0
            if [ $in -ge 0 ]; then
                in_end=1 # if output has already started, close it
            fi
        else
            echo "Error: option -o is duplicated!" && show_help && exit 1
        fi
        ;;
    'pdf')
        if [ $out = 0 -a $out_end = 0 ]; then
            command="$command'$var'" && out=1
        elif [ $in -ge 0 -a $in_end = 0 ]; then
            if [ -f "$var" ]; then # if file exists, append to in_list
                in_list="$in_list '$var'" && ((in++))
            else
                echo "Error: file '$var' not found!" && exit 1
            fi
        else
            echo "Error: invalid command!" && show_help && exit 1
        fi
        ;;
    *) echo "Error: unknown options or a non-pdf file detected!" && show_help && exit 1 ;;
    esac
    ((n++))
done

# echo $in $out $in_end $out_end

if [ $in -gt 0 ]; then
    case $out in
    '-1') command=$command"'merge.pdf'"$in_list ;;          # output not specified
    '0') echo "Error: no output!" && show_help && exit 1 ;; # with -o option but no output file specified
    '1') command=$command$in_list ;;                        # output specified
    esac
    # echo $command
    eval $command
else
    echo "Error: no input!" && show_help && exit 1
fi
